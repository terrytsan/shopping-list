{"version":3,"sources":["constants.js","components/CurrentItems.js","components/PreviousItems.js","components/NewItemModal.js","components/EditItemModal.js","App.js","reportWebVitals.js","index.js"],"names":["List","CurrentItems","this","props","items","selectedItems","listItemClick","tglHighPriorityClick","newItemClick","filter","item","ListID","Constants","sort","a","b","Index","Row","Col","style","display","flexDirection","Button","className","onClick","ListGroup","map","i","ListGroupItem","action","id","ItemID","includes","HighPriority","e","size","ItemName","Component","PreviousItems","NewItemModal","modalShow","modalClose","newItemName","handleNameChange","newItemHighPriority","handlePriorityChange","addItemClick","errors","Modal","show","onHide","animation","Header","closeButton","Title","Body","Form","Group","Control","type","placeholder","value","onChange","isInvalid","itemName","Feedback","Check","label","checked","EditItemModal","editItemName","editItemClick","App","state","dummyItems","prevLstSelectedItems","currLstSelectedItems","showNewItemModal","newItemFormErrors","singleItemSelected","selectedItemId","showEditItemModal","editItemFormErrors","singleItemSelectedPrevList","singleItemSelectedCurrList","exportBtnTxt","checkSingleItemSelected","length","setState","handlePreviousLstItemClick","event","clickedItemId","parseInt","target","concat","handleCurrentLstItemClick","handleLeftArrowOnClick","updatedItems","JSON","parse","stringify","currLstLength","forEach","reAssignIndexes","handleRightArrowOnClick","prevLstLength","hideNewItemModal","handleNewItemNameOnChange","handleNewItemPriorityOnChange","handleAddItemOnClick","preventDefault","newItem","Math","max","apply","validationErrors","validateItem","isValid","selectedItem","find","hideEditItemModal","handleEditItemNameOnChange","handleEditItemOnClick","editedItem","handleDeleteItemOnClick","window","confirm","handleUpArrowOnClick","newIndex","switchItem","handleDownArrowOnClick","handleSaveListOnClick","Storage","localStorage","setItem","handleLoadListOnClick","storedItems","handleClearListOnClick","removeItem","handleExportListOnClick","csvText","Object","keys","header","join","reduce","current","values","console","log","navigator","clipboard","writeText","then","toggleItemHighPriorityOnClick","stopPropagation","listId","listItems","found","reassignedItem","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","NavbarCollapse","Nav","Link","Container","xs","width","alignItems","visibility","marginTop","disabled","paddingTop","justifyContent","alignSelf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e798079.chunk.js","sourcesContent":["export const List = {\r\n\tCurrent: 1,\r\n\tPrevious: 2\r\n};\r\n","import {Button, Col, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Component} from \"react\";\r\nimport * as Constants from './../constants.js';\r\nimport {Exclamation} from \"react-bootstrap-icons\";\r\n\r\nclass CurrentItems extends Component {\r\n\trender() {\r\n\t\tlet {items, selectedItems, listItemClick, tglHighPriorityClick, newItemClick} = this.props;\r\n\r\n\t\titems = items.filter(item => item.ListID === Constants.List.Current);\r\n\r\n\t\t// Sort items by index\r\n\t\titems.sort((a, b) => (a.Index > b.Index) ? 1 : -1);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col style={{display: \"flex\", flexDirection: \"row\"}}>\r\n\t\t\t\t\t\t<h2>Current</h2>\r\n\t\t\t\t\t\t<Button className=\"ml-3 my-auto\" onClick={newItemClick}>+</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<div className=\"border\">\r\n\t\t\t\t\t<ListGroup className=\"listGroupFixedHeight\">\r\n\t\t\t\t\t\t{items.map((item, i) =>\r\n\t\t\t\t\t\t\t<ListGroupItem action key={i} id={item.ItemID}\r\n\t\t\t\t\t\t\t\t\t\t   className={`py-1 px-2 border-0 ` + (selectedItems.includes(item.ItemID) &&\r\n\t\t\t\t\t\t\t\t\t\t\t   `active`)} onClick={listItemClick}>\r\n\t\t\t\t\t\t\t\t<span id={item.ItemID} className={item.HighPriority ? `highPriority` : `stdPriority`}\r\n\t\t\t\t\t\t\t\t\t  onClick={(e) => tglHighPriorityClick(e, item.ItemID)}><Exclamation\r\n\t\t\t\t\t\t\t\t\tsize={20}/></span>\r\n\t\t\t\t\t\t\t\t{item.ItemName}\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCurrentItems.propTypes = {items: PropTypes.any};\r\n\r\nexport default CurrentItems;\r\n","import {ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Component} from \"react\";\r\nimport * as Constants from './../constants.js';\r\n\r\nclass PreviousItems extends Component {\r\n\trender() {\r\n\t\tlet {items, selectedItems, listItemClick} = this.props;\r\n\r\n\t\titems = items.filter(item => item.ListID === Constants.List.Previous);\r\n\r\n\t\t// Sort items by index\r\n\t\titems.sort((a, b) => (a.Index > b.Index) ? 1 : -1);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Previous</h2>\r\n\t\t\t\t<div className=\"border\">\r\n\t\t\t\t\t<ListGroup className=\"listGroupFixedHeight\">\r\n\t\t\t\t\t\t{items.map((item, i) =>\r\n\t\t\t\t\t\t\t<ListGroupItem action key={i} id={item.ItemID}\r\n\t\t\t\t\t\t\t\t\t\t   className={`py-1 px-2 border-0 ` + (selectedItems.includes(item.ItemID) ?\r\n\t\t\t\t\t\t\t\t\t\t\t   `active` : ``)} onClick={listItemClick}>{item.ItemName}</ListGroupItem>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nPreviousItems.propTypes = {items: PropTypes.any};\r\n\r\nexport default PreviousItems;\r\n","import {Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nfunction NewItemModal({\r\n\t\t\t\t\t\t  modalShow, modalClose, newItemName, handleNameChange, newItemHighPriority,\r\n\t\t\t\t\t\t  handlePriorityChange, addItemClick, errors\r\n\t\t\t\t\t  }) {\r\n\treturn (\r\n\t\t<Modal show={modalShow} onHide={modalClose} animation={false}>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>New Item</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Item Name\" value={newItemName}\r\n\t\t\t\t\t\t\t\t\t  onChange={handleNameChange} isInvalid={!!errors.itemName}/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.itemName}</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Check label=\"High Priority\" checked={newItemHighPriority}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriorityChange}/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button type=\"submit\" onClick={addItemClick}>Add</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default NewItemModal;\r\n","import {Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nfunction EditItemModal({\r\n\t\t\t\t\t\t   modalShow, modalClose, editItemName, handleNameChange, editItemClick, errors\r\n\t\t\t\t\t   }) {\r\n\treturn (\r\n\t\t<Modal show={modalShow} onHide={modalClose} animation={false}>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Edit Item</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Item Name\" value={editItemName}\r\n\t\t\t\t\t\t\t\t\t  onChange={handleNameChange} isInvalid={!!errors.itemName}/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">{errors.itemName}</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button type=\"submit\" onClick={editItemClick}>Edit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\r\n\t);\r\n}\r\n\r\nexport default EditItemModal;\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CurrentItems from \"./components/CurrentItems\";\r\nimport PreviousItems from \"./components/PreviousItems\";\r\nimport {Button, Col, Container, Nav, Navbar, Row} from \"react-bootstrap\";\r\nimport {Component} from \"react\";\r\nimport dummyItems from \"./dummyItems.json\";\r\nimport * as Constants from './constants.js';\r\nimport NewItemModal from \"./components/NewItemModal\";\r\nimport EditItemModal from \"./components/EditItemModal\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\titems: dummyItems.items,\r\n\t\tprevLstSelectedItems: [],\r\n\t\tcurrLstSelectedItems: [],\r\n\t\tshowNewItemModal: false,\r\n\t\tnewItemName: \"\",\r\n\t\tnewItemHighPriority: false,\r\n\t\tnewItemFormErrors: {\"itemName\": \"\"},\r\n\t\tsingleItemSelected: false,\r\n\t\tselectedItemId: -1,\r\n\t\tshowEditItemModal: false,\r\n\t\teditItemName: \"\",\r\n\t\teditItemFormErrors: {\"itemName\": \"\"},\r\n\t\tsingleItemSelectedPrevList: false,\r\n\t\tsingleItemSelectedCurrList: false,\r\n\t\texportBtnTxt: \"Export List\"\r\n\t};\r\n\r\n\t// Checks if only a single item is selected\r\n\tcheckSingleItemSelected = () => {\r\n\t\tlet singleItemSelected = this.state.prevLstSelectedItems.length + this.state.currLstSelectedItems.length === 1;\r\n\t\tthis.setState({singleItemSelected: singleItemSelected});\r\n\r\n\t\tif (singleItemSelected) {\r\n\t\t\tif (this.state.prevLstSelectedItems.length === 1) {\r\n\t\t\t\tthis.setState({selectedItemId: this.state.prevLstSelectedItems[0]});\r\n\t\t\t\tthis.setState({singleItemSelectedPrevList: true});\r\n\t\t\t\tthis.setState({singleItemSelectedCurrList: false});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({selectedItemId: this.state.currLstSelectedItems[0]});\r\n\t\t\t\tthis.setState({singleItemSelectedPrevList: false});\r\n\t\t\t\tthis.setState({singleItemSelectedCurrList: true});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({selectedItemId: -1});\r\n\t\t\tthis.setState({singleItemSelectedPrevList: false});\r\n\t\t\tthis.setState({singleItemSelectedCurrList: false});\r\n\t\t}\r\n\t};\r\n\r\n\thandlePreviousLstItemClick = (event) => {\r\n\t\tlet clickedItemId = parseInt(event.target.id);\r\n\r\n\t\t// If already selected, remove\r\n\t\tif (this.state.prevLstSelectedItems.includes(clickedItemId)) {\r\n\t\t\tthis.setState({prevLstSelectedItems: this.state.prevLstSelectedItems.filter(id => id !== clickedItemId)}, this.checkSingleItemSelected);\r\n\t\t} else {\r\n\t\t\tthis.setState({prevLstSelectedItems: this.state.prevLstSelectedItems.concat(clickedItemId)}, this.checkSingleItemSelected);\r\n\t\t}\r\n\t};\r\n\r\n\thandleCurrentLstItemClick = (event) => {\r\n\t\tlet clickedItemId = parseInt(event.target.id);\r\n\r\n\t\t// If already selected, remove\r\n\t\tif (this.state.currLstSelectedItems.includes(clickedItemId)) {\r\n\t\t\tthis.setState({currLstSelectedItems: this.state.currLstSelectedItems.filter(id => id !== clickedItemId)}, this.checkSingleItemSelected);\r\n\t\t} else {\r\n\t\t\tthis.setState({currLstSelectedItems: this.state.currLstSelectedItems.concat(clickedItemId)}, this.checkSingleItemSelected);\r\n\t\t}\r\n\t};\r\n\r\n\thandleLeftArrowOnClick = () => {\r\n\t\tlet updatedItems = JSON.parse(JSON.stringify(this.state.items));\r\n\t\t// Get the length of the receiving list\r\n\t\tlet currLstLength = updatedItems.filter(item => item.ListID === Constants.List.Current).length;\r\n\r\n\t\tupdatedItems.forEach(item => {\r\n\t\t\tif (this.state.prevLstSelectedItems.includes(item.ItemID)) {\r\n\t\t\t\titem.ListID = Constants.List.Current;\r\n\t\t\t\t// Update the index\r\n\t\t\t\titem.Index = currLstLength;\r\n\t\t\t\tcurrLstLength += 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setState({items: this.reAssignIndexes(Constants.List.Previous, updatedItems)});\r\n\t\tthis.setState({prevLstSelectedItems: []}, this.checkSingleItemSelected);\r\n\t};\r\n\r\n\thandleRightArrowOnClick = () => {\r\n\t\tlet updatedItems = JSON.parse(JSON.stringify(this.state.items));\r\n\t\t// Get the length of the receiving list\r\n\t\tlet prevLstLength = updatedItems.filter(item => item.ListID === Constants.List.Previous).length;\r\n\r\n\t\tupdatedItems.forEach(item => {\r\n\t\t\tif (this.state.currLstSelectedItems.includes(item.ItemID)) {\r\n\t\t\t\titem.ListID = Constants.List.Previous;\r\n\t\t\t\t// Update the index\r\n\t\t\t\titem.Index = prevLstLength;\r\n\t\t\t\tprevLstLength += 1;\r\n\t\t\t\t// Strip high priority status\r\n\t\t\t\titem.HighPriority = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setState({items: this.reAssignIndexes(Constants.List.Current, updatedItems)}, this.checkSingleItemSelected);\r\n\t\tthis.setState({currLstSelectedItems: []});\r\n\t};\r\n\r\n\t// Reassigns indexes to be sequential for a particular list.\r\n\treAssignIndexes(listId, items) {\r\n\t\tlet updatedItems = JSON.parse(JSON.stringify(items));\r\n\t\tlet listItems = updatedItems.filter(item => item.ListID === listId);\r\n\t\tlistItems.sort((a, b) => (a.Index > b.Index) ? 1 : -1);\r\n\r\n\t\t// Reassign indexes\r\n\t\tlistItems = listItems.map((item, i) => {\r\n\t\t\titem.Index = i;\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tupdatedItems = updatedItems.map((item) => {\r\n\t\t\tif (item.ListID === listId) {\r\n\t\t\t\tlet found = listItems.find(reassignedItem => reassignedItem.ItemID === item.ItemID);\r\n\t\t\t\titem.Index = found.Index;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\treturn updatedItems;\r\n\t}\r\n\r\n\tshowNewItemModal = () => this.setState({showNewItemModal: true});\r\n\r\n\thideNewItemModal = () => {\r\n\t\t// Cleanup\r\n\t\tthis.setState({newItemName: \"\"});\r\n\t\tthis.setState({newItemFormErrors: {}});\r\n\t\tthis.setState({newItemHighPriority: false});\r\n\t\tthis.setState({showNewItemModal: false});\r\n\t};\r\n\r\n\thandleNewItemNameOnChange = (event) => this.setState({newItemName: event.target.value});\r\n\r\n\thandleNewItemPriorityOnChange = (event) => this.setState({newItemHighPriority: event.target.checked});\r\n\r\n\thandleAddItemOnClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet items = this.state.items;\r\n\t\tlet currLstLength = items.filter(item => item.ListID === Constants.List.Current).length;\r\n\r\n\t\tlet maxItemId = Math.max.apply(Math, items.map(i => i.ItemID));\r\n\r\n\t\t// Validate item\r\n\t\tlet newItem = {\r\n\t\t\t\"ItemID\": maxItemId + 1,\r\n\t\t\t\"ItemName\": this.state.newItemName,\r\n\t\t\t\"ListID\": Constants.List.Current,\r\n\t\t\t\"HighPriority\": this.state.newItemHighPriority,\r\n\t\t\t\"Index\": (this.state.newItemHighPriority) ? -1 : currLstLength\r\n\t\t};\r\n\t\tlet validationErrors = this.validateItem(newItem);\r\n\t\tif (validationErrors.isValid) {\r\n\t\t\tthis.setState({items: this.state.items.concat(newItem)});\r\n\t\t\tthis.hideNewItemModal();\r\n\t\t} else {\r\n\t\t\tthis.setState({newItemFormErrors: validationErrors});\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateItem(item) {\r\n\t\t// Holds the errors messages to output.\r\n\t\t// isValid indicates if any input has a fault\r\n\t\tlet errors = {\r\n\t\t\titemName: \"\",\r\n\t\t\tisValid: true\r\n\t\t};\r\n\r\n\t\tif (this.state.items.find(i => i.ItemName === item.ItemName)) {\r\n\t\t\terrors.itemName = \"Can't be duplicate of existing item.\";\r\n\t\t\terrors.isValid = false;\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tshowEditItemModal = () => {\r\n\t\tthis.setState({showEditItemModal: true});\r\n\r\n\t\t// Get the item details\r\n\t\tlet selectedItem = this.state.items.find(item => item.ItemID === this.state.selectedItemId);\r\n\t\tthis.setState({editItemName: selectedItem.ItemName});\r\n\t};\r\n\r\n\thideEditItemModal = () => {\r\n\t\t// Cleanup\r\n\t\tthis.setState({editItemFormErrors: {}});\r\n\t\tthis.setState({showEditItemModal: false});\r\n\t};\r\n\r\n\thandleEditItemNameOnChange = (event) => this.setState({editItemName: event.target.value});\r\n\r\n\thandleEditItemOnClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Validate item\r\n\t\tlet editedItem = {\"ItemName\": this.state.editItemName};\r\n\t\tlet validationErrors = this.validateItem(editedItem);\r\n\r\n\t\tif (validationErrors.isValid) {\r\n\t\t\t// Update the selected item's name\r\n\t\t\tlet updatedItems = this.state.items.map(item => {\r\n\t\t\t\tif (item.ItemID === this.state.selectedItemId) {\r\n\t\t\t\t\titem.ItemName = this.state.editItemName;\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({items: updatedItems});\r\n\t\t\tthis.hideEditItemModal();\r\n\t\t} else {\r\n\t\t\tthis.setState({editItemFormErrors: validationErrors});\r\n\t\t}\r\n\t};\r\n\r\n\thandleDeleteItemOnClick = () => {\r\n\t\tif (window.confirm(\"Are you sure you want to delete this item? This action is permanent.\")) {\r\n\t\t\tlet updatedItems = this.state.items.filter(item => item.ItemID !== this.state.selectedItemId);\r\n\t\t\tthis.setState({items: updatedItems});\r\n\t\t}\r\n\t};\r\n\r\n\thandleUpArrowOnClick = () => {\r\n\t\tlet selectedItem = this.state.items.find(item => item.ItemID === this.state.selectedItemId);\r\n\r\n\t\t// Decrement index of selected item (move up)\r\n\t\tlet newIndex = selectedItem.Index - 1;\r\n\t\tlet switchItem = this.state.items.find(item => (item.Index === newIndex && item.ListID === selectedItem.ListID));\r\n\r\n\t\t// Abort if there is no item above the selected item\r\n\t\tif (!switchItem) return;\r\n\r\n\t\t// Prevent low priority items being moved above high priority\r\n\t\t// Only perform swap if selected item is high priority OR switchItem is low priority\r\n\t\tif (selectedItem.HighPriority || !switchItem.HighPriority) {\r\n\r\n\t\t\tlet updatedItems = this.state.items.map(item => {\r\n\t\t\t\tif (item.Index === newIndex && item.ListID === selectedItem.ListID) {\r\n\t\t\t\t\t// Increment the item at new index (move down)\r\n\t\t\t\t\titem.Index = item.Index + 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (item.ItemID === this.state.selectedItemId) {\r\n\t\t\t\t\titem.Index = newIndex;\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\t// Update items list after reassigning indexes\r\n\t\t\tthis.setState({items: this.reAssignIndexes(selectedItem.ListID, updatedItems)});\r\n\t\t}\r\n\t};\r\n\r\n\thandleDownArrowOnClick = () => {\r\n\t\tlet selectedItem = this.state.items.find(item => item.ItemID === this.state.selectedItemId);\r\n\r\n\t\t// Increment index of selected item (move down)\r\n\t\tlet newIndex = selectedItem.Index + 1;\r\n\r\n\t\tlet switchItem = this.state.items.find(item => (item.Index === newIndex && item.ListID === selectedItem.ListID));\r\n\r\n\t\t// Only move down if selected item is low priority\r\n\t\tif ((selectedItem.HighPriority && switchItem.HighPriority) || !selectedItem.HighPriority) {\r\n\t\t\tlet updatedItems = this.state.items.map(item => {\r\n\t\t\t\tif (item.Index === newIndex && item.ListID === selectedItem.ListID) {\r\n\t\t\t\t\t// Decrement the item at new index (move up)\r\n\t\t\t\t\titem.Index = item.Index - 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (item.ItemID === this.state.selectedItemId) {\r\n\t\t\t\t\titem.Index = newIndex;\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\t// Update items list after reassigning indexes\r\n\t\t\tthis.setState({items: this.reAssignIndexes(selectedItem.ListID, updatedItems)});\r\n\t\t}\r\n\t};\r\n\r\n\thandleSaveListOnClick = () => {\r\n\t\tif (typeof (Storage) !== \"undefined\") {\r\n\t\t\tlocalStorage.setItem(\"items\", JSON.stringify(this.state.items));\r\n\t\t}\r\n\t};\r\n\r\n\thandleLoadListOnClick = () => {\r\n\t\tif (typeof (Storage) !== \"undefined\") {\r\n\t\t\tlet storedItems = localStorage.items;\r\n\t\t\tif (storedItems) {\r\n\t\t\t\tthis.setState({items: JSON.parse(storedItems)});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandleClearListOnClick = () => {\r\n\t\tif (typeof (Storage) !== \"undefined\") {\r\n\t\t\tlocalStorage.removeItem(\"items\");\r\n\t\t}\r\n\t};\r\n\r\n\thandleExportListOnClick = () => {\r\n\t\t// Extract the header row\r\n\t\tlet csvText = Object.keys(this.state.items[0]).map(header => header).join(\",\") + \"\\n\";\r\n\r\n\t\tcsvText = this.state.items.reduce((csvText, current) => {\r\n\t\t\tcsvText += Object.values(current).map(value => value).join(\",\") + \"\\n\";\r\n\t\t\treturn csvText;\r\n\t\t}, csvText);\r\n\t\tconsole.log(csvText);\r\n\r\n\t\tif (navigator.clipboard) {\r\n\t\t\tnavigator.clipboard.writeText(csvText).then(() => this.setState({exportBtnTxt: \"Copied to CLP\"}), () => this.setState({exportBtnTxt: \"Failed to copy.\"}));\r\n\t\t}\r\n\t};\r\n\r\n\ttoggleItemHighPriorityOnClick = (event, id) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet updatedItems = this.state.items.map(item => {\r\n\t\t\tif (item.ItemID === id) {\r\n\t\t\t\titem.HighPriority = !item.HighPriority;\r\n\t\t\t\t// Move item to top/bottom depending on new priority\r\n\t\t\t\titem.Index = (item.HighPriority) ? -1 :\r\n\t\t\t\t\tthis.state.items.filter(i => i.ListID === Constants.List.Current).length;\r\n\t\t\t}\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tthis.setState({items: this.reAssignIndexes(Constants.List.Current, updatedItems)});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\t<Navbar.Brand>Shopping List</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Toggle/>\r\n\t\t\t\t\t<NavbarCollapse>\r\n\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t<Nav.Link>Create New</Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link>Load Saved</Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link>Your account</Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link>About us</Nav.Link>\r\n\t\t\t\t\t\t\t<Nav.Link>Contact</Nav.Link>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</NavbarCollapse>\r\n\t\t\t\t</Navbar>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xs={5}>\r\n\t\t\t\t\t\t\t<CurrentItems items={this.state.items}\r\n\t\t\t\t\t\t\t\t\t\t  selectedItems={this.state.currLstSelectedItems}\r\n\t\t\t\t\t\t\t\t\t\t  listItemClick={this.handleCurrentLstItemClick}\r\n\t\t\t\t\t\t\t\t\t\t  tglHighPriorityClick={this.toggleItemHighPriorityOnClick}\r\n\t\t\t\t\t\t\t\t\t\t  newItemClick={this.showNewItemModal}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={2}\r\n\t\t\t\t\t\t\t style={{display: \"flex\", width: \"100%\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n\t\t\t\t\t\t\t<Row><h2 style={{visibility: \"hidden\"}}>1</h2></Row>\r\n\t\t\t\t\t\t\t<Row className=\"itemsListBtnRow\">\r\n\t\t\t\t\t\t\t\t<Button className=\"itemsListBtn\" onClick={this.handleLeftArrowOnClick}>˂</Button>\r\n\t\t\t\t\t\t\t\t<Button className=\"itemsListBtn\" onClick={this.handleRightArrowOnClick}>˃</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row className=\"itemsListBtnRow\" style={{marginTop: \"auto\"}}>\r\n\t\t\t\t\t\t\t\t<Button className=\"itemsListBtn\" onClick={this.handleUpArrowOnClick}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.singleItemSelectedCurrList}>˄</Button>\r\n\t\t\t\t\t\t\t\t<Button className=\"itemsListBtn\" onClick={this.handleDownArrowOnClick}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={!this.state.singleItemSelectedCurrList}>˅</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={5}>\r\n\t\t\t\t\t\t\t<PreviousItems items={this.state.items}\r\n\t\t\t\t\t\t\t\t\t\t   selectedItems={this.state.prevLstSelectedItems}\r\n\t\t\t\t\t\t\t\t\t\t   listItemClick={this.handlePreviousLstItemClick}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row style={{paddingTop: \"15px\"}}>\r\n\t\t\t\t\t\t<Col xs={5}>\r\n\t\t\t\t\t\t\t<Button className=\"mr-2 mb-2\" onClick={this.handleSaveListOnClick}>Save List</Button>\r\n\t\t\t\t\t\t\t<Button className=\"mr-2 mb-2\" onClick={this.handleClearListOnClick}>Clear List</Button>\r\n\t\t\t\t\t\t\t<Button className=\"mr-2 mb-2\" onClick={this.handleLoadListOnClick}>Load List</Button>\r\n\t\t\t\t\t\t\t<Button className=\"mb-2\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.handleExportListOnClick}>{this.state.exportBtnTxt}</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={2} style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\t\t\t\t\t\t\t<Button onClick={this.showEditItemModal}\r\n\t\t\t\t\t\t\t\t\tstyle={{alignSelf: \"start\"}}\r\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.singleItemSelected}>Edit</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button onClick={this.handleDeleteItemOnClick}\r\n\t\t\t\t\t\t\t\t\tdisabled={!this.state.singleItemSelectedPrevList}>Delete</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<NewItemModal modalShow={this.state.showNewItemModal}\r\n\t\t\t\t\t\t\t  modalClose={this.hideNewItemModal}\r\n\t\t\t\t\t\t\t  newItemName={this.state.newItemName}\r\n\t\t\t\t\t\t\t  handleNameChange={this.handleNewItemNameOnChange}\r\n\t\t\t\t\t\t\t  newItemHighPriority={this.state.newItemHighPriority}\r\n\t\t\t\t\t\t\t  handlePriorityChange={this.handleNewItemPriorityOnChange}\r\n\t\t\t\t\t\t\t  addItemClick={this.handleAddItemOnClick}\r\n\t\t\t\t\t\t\t  errors={this.state.newItemFormErrors}/>\r\n\t\t\t\t<EditItemModal modalShow={this.state.showEditItemModal}\r\n\t\t\t\t\t\t\t   modalClose={this.hideEditItemModal}\r\n\t\t\t\t\t\t\t   editItemName={this.state.editItemName}\r\n\t\t\t\t\t\t\t   handleNameChange={this.handleEditItemNameOnChange}\r\n\t\t\t\t\t\t\t   editItemClick={this.handleEditItemOnClick}\r\n\t\t\t\t\t\t\t   errors={this.state.editItemFormErrors}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}